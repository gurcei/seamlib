#output "menusystem"

'--------
.declares
'--------
#declare bkp_d054&, bkp_d058&, bkp_d059&, bkp_d05e&
#declare a$, k, tclr, tx, ty, my_err$, idx, rev_flag, chr, kk
#declare x, y, xx%, yy%, value
#declare pane_x%, pane_y%, pane_width%, pane_height%, pane_title$
#declare loc
#declare aptr_lo, aptr_hi

'-------
.defines
'-------
#define KEY_ESCAPE = chr$(27)
#define KEY_UP = "{x91}"
#define KEY_DOWN = "{x11}"
#define KEY_LEFT = "{x9D}"
#define KEY_RIGHT = "{x1D}"

#define KEY_F1 = "{x85}"
#define KEY_F3 = "{x86}"
#define KEY_F4 = "{x8A}"
#define KEY_F5 = "{x87}"
#define KEY_F7 = "{x88}"
#define KEY_F8 = "{x8C}"
#define KEY_ESC = chr$(27)
#define KEY_REV_ON = "{x12}"
#define KEY_REV_OFF = "{x92}"
#define KEY_RETURN = chr$(13)
#define KEY_MEGA_A = "°"
#define KEY_MEGA_Q = "«"
#define KEY_MEGA_C = "¼"
#define KEY_MEGA_V = "¾"
#define KEY_MEGA_D = "¬"
#define KEY_MEGA_B = "¿"
#define KEY_DEL = "{x14}"
#define KEY_CLR = "{x93}"

#define WIDTH = 250
#define VIS_WIDTH = 160

#define OP_COPY = 0
#define OP_MIX  = 1
#define OP_SWAP = 2
#define OP_FILL = 3


trap runstop_trapper

'----
.main
'----
  gosub init

  gosub clrscreen

  gosub print_garbage

  pane_x% = 10
  pane_y% = 10
  pane_width% = 30
  pane_height% = 40
  pane_title$ = "test prompt"

  gosub draw_pane

  gosub user_input

  end


'---------
.draw_pane
'---------
  bank 0
  poke $7e10, pane_x%
  poke $7e11, pane_y%
  poke $7e12, pane_width%
  poke $7e13, pane_height%
^^  sys to $7f09, i0
  bank 128
  return


'--------
.hide_pane
'--------
  bank 0
  poke $7e10, pane_x%
  poke $7e11, pane_y%
  poke $7e12, pane_width%
  poke $7e13, pane_height%
^^  sys to $7f0c, i0
  bank 128
  return


'---------
.plot_char
'---------
  wpoke $40800 + ty * WIDTH + tx * 2, value
  wpoke $ff80000 + ty * WIDTH + tx * 2, tclr * 256
  return
  

'-------------
.print_garbage
'-------------
  for kk = 0 to 49
    tclr = 0 : tx = 0 : ty = kk : a$ = "0123456789" : a$ = a$ + a$ + a$ + a$
    a$ = a$ + a$
    gosub draw_text
  next kk
  return


'----
.init
'----
  bank 128
  key off

  bload "game.pal",p($ffd3100)
  bload "chars.bin",p($40000),r
  bload "asmhelper"
  print "{x93}";KEY_ESCAPE;"5";
  
  bkp_d054& = peek($d054)
  bkp_d058& = peek($d058)
  bkp_d059& = peek($d059)
  bkp_d05e& = peek($d05e)

  aptr_lo = pointer(a$) and $ff
  aptr_hi = pointer(a$) / 256

  ' set SEAM mode CHR16 + FCLRHI
  setbit $d054, 0
  setbit $d054, 2

  wpoke $d058, WIDTH
  poke $d05e, WIDTH / 2

  poke $d021, 14
  poke $d020, 0

  ' $1000 = solid fcm char
  for k = 0 to 63
    poke $40000 + k, $ff
  next k

  ' $1001 = pane char
  for k = 0 to 63
    if int(k / 8) = 0 or int(k / 8) = 7 then poke $40040 + k, $ff:goto nxt
    if mod(k, 8) = 0 or mod(k, 8) = 7 then poke $40040 + k, $ff:goto nxt
    poke $40040 + k, $00
.nxt
  next k

  return


'---------------
.runstop_trapper
'---------------
  ' if er<>30 then resume  ' ignore everything except run/stop

  my_err$ = "?" + err$(er) + " in line " + str$(el)

.cleanup
  print "{x93}";my_err$
  trap
  key on
  poke $d054, bkp_d054&
  poke $d058, bkp_d058&
  poke $d059, bkp_d059&
  poke $d05e, bkp_d05e&

  end


'----------
.user_input
'----------
  do while 1
    get key a$

    if a$ = KEY_MEGA_Q then goto cleanup

    gosub hide_pane

  loop

  end


'---------
.draw_text
'---------
  bank 0
  poke $7e0d, tx
  poke $7e0e, ty
  poke $7e0f, tclr

  sys $7f03, 0, aptr_lo, aptr_hi

  bank 128
  return


'---------
.clrscreen
'---------
  bank 0
^^  sys to $7f06, i0
  bank 128
  return

  edma OP_FILL, WIDTH * 50, 32, $40800
  edma OP_FILL, WIDTH * 50, 0, $ff80000

  ' clear screen
  for y = 0 to 49
   for x = 0 to 79
     poke $40800 + y * WIDTH + x * 2 + 1, 0
   next x
  next y


  return
ÿ