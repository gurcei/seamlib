#OUTPUT "PALETTE"'--------.DECLARES'--------#DECLARE BKP╞D054&, BKP╞D058&, BKP╞D059&, BKP╞D05E&#DECLARE K, A$, X, Y, CX, CY, CURSOR╞CLR'-------.DEFINES'-------#DEFINE кеы╞есцапе = CHR$(27)#DEFINE видтх = 200#DEFINE оп╞цопы = 0#DEFINE оп╞миь  = 1#DEFINE оп╞свап = 2#DEFINE оп╞филл = 3#DEFINE кеы╞уп = "▒"#DEFINE кеы╞довн = ""#DEFINE кеы╞лефт = "²"#DEFINE кеы╞ригхт = ""TRAP RUNSTOP╞TRAPPER'----.MAIN'----  GOSUB INIT  GOSUB CLRSCREEN  GOSUB DRAW╞PALETTE  GOSUB PARSE╞CURSOR  GOTO CLEANUP  END'----.INIT'----  ' цхр16 ON (FOR 16-BIT CHARS)  ' фцлрхи ON (ENABLE сеам FOR CHAR NUMBERS > $FF)  PRINT "⌠";кеы╞есцапе;"5";    BKP╞D054& = PEEK($D054)  BKP╞D058& = PEEK($D058)  BKP╞D059& = PEEK($D059)  BKP╞D05E& = PEEK($D05E)  POKE $D054, $05   ' SET сеам MODE цхр16 + фцлрхи  WPOKE $D058, видтх  POKE $D05E, видтх / 2  POKE $D021, 14  POKE $D020, 0  ' $1000 = SOLID FCM CHAR  FOR K = 0 TO 63    POKE $40000 + K, $FF  NEXT K  ' $1001 = BOX CHAR  FOR K = 0 TO 63    IF INT(K / 8) = 0 OR INT(K / 8) = 7 THEN POKE $40040 + K, $FF:GOTO NXT    IF MOD(K, 8) = 0 OR MOD(K, 8) = 7 THEN POKE $40040 + K, $FF:GOTO NXT    POKE $40040 + K, $00.NXT  NEXT K  RETURN'---------------.RUNSTOP╞TRAPPER'---------------  IF ER<>30 THEN RESUME  ' IGNORE EVERYTHING EXCEPT RUN/STOP.CLEANUP  TRAP  POKE $D054, BKP╞D054&  POKE $D058, BKP╞D058&  POKE $D059, BKP╞D059&  POKE $D05E, BKP╞D05E&  END'---------.CLRSCREEN'---------  ' CLEAR SCREEN  ' FOR Y = 0 TO 49  '  FOR X = 0 TO 79  '    WPOKE $40800 + Y * видтх + X * 2, 32  '    WPOKE $FF80000 + Y * видтх + X * 2, 0  '  NEXT X  'NEXT Y  EDMA оп╞филл, видтх * 50, 32, $40800  EDMA оп╞филл, видтх * 50, 0, $FF80000  RETURN'------------.DRAW╞PALETTE'------------  ' DRAW X-INDEX  FOR X = 0 TO 15    IF X < 10 THEN WPOKE $40800 + X * 2 + 2, $30 + X    IF X >= 10 THEN WPOKE $40800 + X * 2 + 2, X - 9    WPOKE $FF80000 + X * 2 + 2, 0 * 256  NEXT X  ' DRAW Y-INDEX  FOR Y = 0 TO 15    IF Y < 10 THEN WPOKE $40800 + (Y+1) * видтх, $30 + Y    IF Y >= 10 THEN WPOKE $40800 + (Y+1) * видтх, Y - 9    WPOKE $FF80000 + (Y+1) * видтх, 0 * 256  NEXT Y  ' DRAW BLOCKS FOR EACH COLOUR  FOR Y = 1 TO 16    FOR X = 1 TO 16      WPOKE $40800 + Y * видтх + X * 2, $1000      WPOKE $FF80000 + Y * видтх + X * 2, ((Y-1) * 16 + (X - 1)) * 256    NEXT X  NEXT Y  RETURN'------------.PARSE╞CURSOR'------------  DO WHILE 1    GOSUB DRAW╞CURSOR    GET A$    IF A$ = кеы╞ригхт AND CX < 15 THEN CX = CX + 1    IF A$ = кеы╞лефт AND CX > 0 THEN CX = CX - 1    IF A$ = кеы╞уп AND CY > 0 THEN CY = CY - 1    IF A$ = кеы╞довн AND CY < 15 THEN CY = CY + 1    CURSOR╞CLR = MOD(CURSOR╞CLR + 1, 16)  LOOP  RETURN'-----------.DRAW╞CURSOR'-----------  FOR Y = 0 TO 15    K = (CX + 1) * 8    IF CY <> Y THEN K = 80 * 8    ' PREPARE готоь CHAR    POKE $FF80000 + (Y + 1) * видтх + 160, %10010000  ' GOTOX BIT + TRANSP FLAG    WPOKE $40800 + (Y + 1) * видтх + 160, K    ' PREPARE CURSOR CHAR    WPOKE $FF80002 + (Y + 1) * видтх + 160, CURSOR╞CLR * 256  ' WHITE     WPOKE $40802 + (Y + 1) * видтх + 160, $1001    ' PREPARE готоь CHAR (TO OFF-SCREEN)    POKE $FF80004 + (Y + 1) * видтх + 160, %10010000  ' GOTOX BIT + TRANSP FLAG    WPOKE $40804 + (Y + 1) * видтх + 160, 80 * 8  NEXT Y  RETURN