' ==================' '”–“…Œ«' ¬œœ‘ Õ≈Œ’' ==================#OUTPUT "AUTOBOOT.C65"'--------.DECLARES'--------#DECLARE ROM$, VM$, FNAME$#DECLARE MASK%, MONTH%, YEAR%, DS%, DATE$#DECLARE FPGAØHASH$, REVERSE%, UPPER, LOWER#DECLARE A$, K, OFFS, XEMUØFLAG#DECLARE RBWØCLR, CTIME, RET%#DECLARE LINEØCNT, CH, SKIPØFLAG'-------.DEFINES'-------#DEFINE ‘“’≈ = 1#DEFINE ∆¡Ã”≈ = 0#DEFINE Ã…Œ≈∆≈≈ƒ = 10#DEFINE “≈‘’“Œ = 13#DEFINE À≈ŸØ“≈‘’“Œ = CHR$(13)#DEFINE À≈ŸØ≈”√ = CHR$(27)'----.INIT'----  FAST 40  BANK 128  OFFS = $FFD3630  POKE $D020, 0, 0  PRINT À≈ŸØ≈”√;"8"  'PRINT CHR$(142);  ' SWITCH BACK TO UPPER-CASE  PRINT CHR$(14);  ' LOWER-CASE'----.MAIN'----  GOSUB CHECKØIFØREBOOTØAFTERØROMØSWITCH  GOSUB SHOWØMAINØMENU  CTIME=TI  DO    IF TI-CTIME > .03 THEN BEGIN      GOSUB CYCLEØCOLOURS      CTIME=TI    BEND    GET A$  LOOP WHILE A$=""  IF A$="1" THEN GOSUB PERFORMØCHECKS  IF A$="2" THEN GOSUB SHOWØABOUT  IF A$="3" THEN GOSUB SHOWØSOURCEØLIST  IF A$="/" THEN PRINT "ìBYE!";:END    GOTO MAIN  END'--------------------------------.CHECKØIFØREBOOTØAFTERØROMØSWITCH'--------------------------------  IF PEEK($40000) = ASC("G") AND PEEK($40001) = ASC("I") _      AND PEEK($40002) = ASC("B") THEN BEGIN    DLOAD "SEAMLIB"  BEND  RETURN'-------------.CYCLEØCOLOURS'-------------  FOR K = 0 TO 5    POKE $FF80001+K, MOD(RBWØCLR+K,16) + 64  NEXT K  RBWØCLR = MOD(RBWØCLR + 1, 16)  RETURN'--------------.SHOWØMAINØMENU'--------------  PRINT "ì";  PRINT "'ê”PRüI";CHR$(156);"NG' -  ö¡ GAME BY ÕOANA (AND HER DADDY)  -  12TH ¡UGUST 2025"  PRINT "========"  PRINT  PRINT "ü1) –LAY GAME"  PRINT "ü2) ¡BOUT THIS GAME"  PRINT "ü3) ¬ROWSE THE SOURCE CODE"  PRINT "ü/) ≈XIT"  RETURN'--------------.PERFORMØCHECKS'--------------  ' ”–“…Œ« GAME WORKS FINE IN XEMU, SO NOT A BIG WORRY THERE  ' GOSUB XEMUØCHECK  IF XEMUØFLAG = 0 THEN BEGIN    GOSUB COREØCHECK  BEND  GOSUB ROMØCHECK  GOSUB NTSCØTOØPAL  CLR  DLOAD "SEAMLIB"  RETURN'------------------.ISØCOREØDATEØOLDER'------------------  IF YEAR% < 2024 THEN RET% = ‘“’≈ : RETURN  IF YEAR% > 2024 THEN RET% = ∆¡Ã”≈ : RETURN  IF MONTH% < 5 THEN RET% = ‘“’≈ : RETURN  IF MONTH% > 5 THEN RET% = ∆¡Ã”≈ : RETURN  IF DS% < 24 THEN RET% = ‘“’≈ : RETURN  IF DS% > 24 THEN RET% = ∆¡Ã”≈ : RETURN  ' FINAL CASE OF DATES BEING EQUAL  RET% = ∆¡Ã”≈  RETURN'----------.COREØCHECK'----------  GOSUB FORMATØDATESTAMP  GOSUB FORMATØFPGAØHASH  GOSUB ISØCOREØDATEØOLDER  IF FPGAØHASH$<>"AAF4542" AND RET% = ‘“’≈ THEN BEGIN    PRINT "ì√œ“≈ ◊¡“Œ…Œ«: ‘HIS GAME HAS BEEN TESTED AGAINST THIS CORE:"    PRINT "- 0.97 “ELEASE CORE: AAF4542   2025-04-22"    PRINT "-         ŸOUR CORE: ";FPGAØHASH$;"  ";DATE$;""    PRINT    PRINT "…F EXPERIENCING PROBLEMS, PLEASE DOWNLOAD THIS CORE FROM THE FILEHOST:"    PRINT "- üHTTPS://FILES.MEGA65.ORG"    PRINT "  - SEARCH FOR 'CORE RELEASE' AND CHOOSE YOUR DOWNLOAD TARGET (R2, R3, R6)"    PRINT    PRINT "- ’NZIP THE 'üMEGA65*.7Z' FILE AND LOCATE THE .COR FILE WITHIN"    PRINT "- –LACE IT ON YOUR SD-CARD"    PRINT "- –OWER UP WITH THE 'üNO SCROLL' KEY AND FLASH IT TO A SPARE SLOT"    PRINT "- ”ELECT THIS CORE FROM THE FLASH MENU TO RUN IT"    PRINT    PRINT "û–RESS ANY KEY TO CONTINUE..."    GET KEY A$  BEND  RETURN'----------.SHOWØABOUT'----------  PRINT "ìñ¡¬œ’‘ (1/3)"  PRINT  "====="  PRINT "ÕY DADDY KEPT BUGGING ME TO WRITE A GAME ON HIS SILLY Õ≈«¡65 THING."  PRINT "… FINALLY RELENTED AND SHARED MY GAME DESIGN VISION WITH HIM ON THE"  PRINT "CONDITION THAT HE DO ALL THE DUMB CODE MONKEY WORK AND LEAVE ALL THE"  PRINT "IMPORTANT GAME DESIGN WORK TO ME, SO THAT … HAVE TOP BILLING IN THE"  PRINT "CREDITS, AND … MIGHT CONSIDER GIVING HIM A LITTLE MENTION IN PASSING."  PRINT "≈ITHER THAT OR … THROW A FEW PEANUTS HIS WAY AS A REWARD ;)"    PRINT  PRINT "û–RESS ANY KEY TO CONTINUE..."  GET KEY A$  PRINT "ìñ¡¬œ’‘ (2/3)"  PRINT  "====="  PRINT "œK, DADDY'S TURN NOW. … THOUGHT IT WAS TIME TO FINALLY BITE THE BULLET"  PRINT "AND WRITE A ”≈¡Õ/““¬-BASED GAME IN ≈LEVEN + ¬¡”…√ 65."  PRINT  PRINT "…T WAS CHALLENGING, REQUIRED SOME ASSEMBLY SUPPORT ROUTINES TO SPEED"  PRINT "THINGS UP, BUT …'M HAPPY WE GOT TO THERE."  PRINT  PRINT "œN THE WHOLE, IT'S A SIMPLE, CUTE GAME, SUITABLE FOR YOUNG CHILDREN TO"  PRINT "IMPROVE THEIR HAND-EYE COORDINATION WITH A JOYSTICK. … LIKE TO THINK OF IT"  PRINT "AS A GAME THAT ÕASTERTRONICS WOULD HAVE DEEMED WORTHY TO RELEASE BACK IN"  PRINT "THOSE DAYS! :)"  PRINT  PRINT " ”OME FUN TECHNICAL ASPECTS OF IT WERE THAT:"  PRINT "- … HAD TO WRITE A FEW TOOLS FROM SCRATCH:"  PRINT "  - ¡ PALETTE EDITOR CALLED '–¡Ã≈‘‘≈' (IN ≈LEVEN/¬¡”…√)"  PRINT "  - ¡ ”≈¡Õ-∆√Õ SPRITE DRAWING TOOL CALLED '”≈¡Õƒ“¡◊' (IN ≈LEVEN/¬¡”…√)"  PRINT "  - ‘HE '”≈¡ÕÃ…¬' LIBRARY (WITH ¡√Õ≈ ¡SSEMBLER ON –√)"  PRINT "- ‘HE GAME IS IN 640X400 RESOLUTION"  PRINT "- ‘HE GAME PRESENTS ABOUT 13 SPRITES ON SCREEN IN THE DIFFICULT LEVEL"  PRINT  PRINT "û–RESS ANY KEY TO CONTINUE..."  GET KEY A$  PRINT "ìñ¡¬œ’‘ (3/3)"  PRINT  "====="  PRINT "‘HE MUSIC WAS MY COVER OF THE THEME SONG FROM A VERY OLD AND FORGOTTEN"   PRINT "√64 GAME CALLED 'ƒUNGEON OF THE ¡LGEBRA ƒRAGONS'."  PRINT "ÕY SISTER AND … PLAYED THIS GAME TO DEATH BACK IN OUR YOUTH, AND THE"  PRINT "ANNOYINGLY REPETITIVE (YET CATCHY) THEME IS ETCHED INTO OUR BRAINS."  PRINT "”O SEE THIS COVER AS MY ATTEMPT TO PAY HOMAGE TO THIS EARLY ERA OF"  PRINT "COMPUTER GAMING. ”URE, GAMES LOOKED CRUDE AND SIMPLE BACK THEN, BUT"  PRINT "THEY STILL HAD THEIR OWN CHARM!"  PRINT  PRINT "œH, AND IN CASE YOU WERE WONDERING..."  PRINT "ŸES, THE GAME MUSIC IS PERFORMED BY ü¬¡”…√ 65'S '–Ã¡Ÿ' COMMAND! ;)"  PRINT  PRINT "ÕUCH IN THE SAME WAY, … HOPE YOU ENJOY THIS SIMPLE GAME AND FIND A"  PRINT "SIMILAR FLAVOUR OF CHARM TO IT ALSO. ∆OR THE Õ≈«¡65 COMMUNITY, …"  PRINT "FEEL LIKE THIS IS OUR 1983-ERA, US DEVS ARE SKILLING UP AND SHARING"  PRINT "THEIR HUMBLE CREATIONS. ¬UT AS TIME ROLLS ON, SKILLS WILL GROW AND"  PRINT "OUR PROJECTS WILL GET MORE AMBITIOUS, SHOWCASING MORE AND MORE OF"  PRINT "WHAT THE Õ≈«¡65 SYSTEM IS CAPABLE OF."  PRINT "”O HERE'S LOOKING FORWARD TO THE YEARS AHEAD OF US!"  PRINT "û–RESS ANY KEY TO CONTINUE..."  GET KEY A$  A$=""  RETURN'----------------.SHOWØSOURCEØLIST'----------------  PRINT "ìñÕ¡…Œ ”œ’“√≈ ∆…Ã≈”"  PRINT "================="  PRINT "ü1) SEAMLIB.EL"  PRINT "ü2) PALETTE.EL"  PRINT "ü3) SEAMDRAW.EL"  PRINT "ü4) ASMHELPER.A"  PRINT  PRINT "ñÕ…”√. ∆…Ã≈”"  PRINT "==========="  PRINT "ü5) MELODY.EL"  PRINT "ü6) AUTOBOOT.EL"  PRINT  PRINT "ü/) ≈XIT"  GET KEY A$  IF A$="1" THEN GOSUB SEAMLIBØEL  IF A$="2" THEN GOSUB PALETTEØEL  IF A$="3" THEN GOSUB SEAMDRAWØEL  IF A$="4" THEN GOSUB ASMHELPERØA  IF A$="5" THEN GOSUB MELODYØEL  IF A$="6" THEN GOSUB AUTOBOOTØEL  IF A$="/" THEN A$="": RETURN  GOTO SHOWØSOURCEØLIST  RETURN.AUTOLOADØ11'-----------  PRINT "ìAUTOLOAD ";CHR$(34);FNAME$;CHR$(34):CLR:DLOAD "11BOOT.C65"  RETURN.AUTOLOADØMA'-----------  POKE $D020,6,6  PRINT CHR$(142);  ' SWITCH BACK TO UPPER-CASE  PRINT "ìAUTOLOAD ";CHR$(34);FNAME$;CHR$(34)  CLR  DLOAD "MEGA ASSEMBLER"  RETURN.SEAMLIBØEL'----------  DO    PRINT "ì";    PRINT "ñSEAMLIB.EL"    PRINT "=========="    PRINT "‘HIS STARTED OFF AS AN EXAMPLE OF USING THE SEAMLIB LIBRARY, BUT THEN"    PRINT "EVOLVED INTO THE ACTUAL '”PRING' GAME, SO … PROBABLY SHOULD HAVE RENAMED"    PRINT "IT TO BE CALLED 'SPRING.EL'..."    PRINT    PRINT "‘HIS FILE IS WORTH A BROWSE FOR FOLKS CURIOUS TO SEE HOW THE SEAMLIB"    PRINT "CAN BE MADE USE OF."    PRINT    PRINT "ŸOU'RE ALSO ABLE TO MODIFY AND RE-BUILD THE GAME TO YOUR LIKING, AS A"    PRINT "COPY OF THE ≈LEVEN …ƒ≈ IS WITHIN THIS DISK ALSO."    PRINT    PRINT "ü“≈‘’“Œ) œPEN 'ñSEAMLIB.EL' IN ≈LEVEN"    PRINT "     ü/) ≈XIT"    GET KEY A$    IF A$=CHR$(13) THEN FNAME$="SEAMLIB.EL":GOTO AUTOLOADØ11  LOOP WHILE A$<>"/"  A$=""  RETURN.PALETTEØEL'----------  DO    PRINT "ì";    PRINT "ñPALETTE.EL"    PRINT "=========="    PRINT "… WANTED A TOOL TO HELP ME DESIGN A PALETTE FOR MY GAME, ALLOWING FOR"    PRINT "EASY CREATION OF GRADIENTS."    PRINT    PRINT "¡LAS, IT DOESN'T HAVE ANY IN-BUILT HELP SYSTEM YET, BUT YOU CAN BROWSE"    PRINT "THE SOURCE, SEARCHING FOR THE 'USERØINPUT' ROUTINE, TO GET A SENSE OF"    PRINT "WHAT IT IS CAPABLE OF."    PRINT "  - ∆1 = LOAD PALETTE FILE (E.G. TRY LOADING 'GAME.PAL')"    PRINT "  - ∆3 = SAVE PALETTE FILE"    PRINT    PRINT "…'LL ENDEAVOUR TO ADD AN IN-BUILT HELP SYSTEM IN FUTURE..."    PRINT    PRINT "ü“≈‘’“Œ) œPEN 'ñPALETTE.EL' IN ≈LEVEN"    PRINT " ü”–¡√≈) “UN 'ñ–¡Ã≈‘‘≈' (COMPILED SOURCE)"    PRINT "     ü/) ≈XIT"    GET KEY A$    IF A$=CHR$(13) THEN FNAME$="PALETTE.EL":GOTO AUTOLOADØ11    IF A$=" " THEN CLR:DLOAD "PALETTE"  LOOP WHILE A$<>"/"  A$=""  RETURN.SEAMDRAWØEL'----------  DO    PRINT "ì";    PRINT "ñSEAMDRAW.EL"    PRINT "============"    PRINT "… MADE THIS TOOL SO THAT … COULD QUICKLY DOODLE SEAM-FCM SPRITES OF"    PRINT "ANY CUSTOM SIZE … LIKE. …T MAY NOT BE THE MOST EFFICIENT USE OF CHARACTER"    PRINT "DATA, BUT IT GETS THE JOB DONE IN A SIMPLE, STRAIGHTFORWARD WAY."    PRINT    PRINT "¡GAIN, APOLOGIES FOR THE LACK OF IN-BUILT HELP/DOCUMENTATION, BUT HOPEFULLY"    PRINT "SEARCHING THE CODE FOR 'USERØINPUT' WILL SHOW YOU ALL THE AVAILABLE"    PRINT "CAPABILITIES."    PRINT    PRINT "  - ∆1 = LOAD SEAM-DATA FILE (E.G. TRY LOADING 'MOANA4.BIN')"    PRINT "  - ∆3 = SAVE SEAM-DATA FILE"    PRINT    PRINT "ü“≈‘’“Œ) œPEN 'ñSEAMDRAW.EL' IN ≈LEVEN"    PRINT " ü”–¡√≈) “UN 'ñ”≈¡Õƒ“¡◊' (COMPILED SOURCE)"    PRINT "     ü/) ≈XIT"    GET KEY A$    IF A$=CHR$(13) THEN FNAME$="SEAMDRAW.EL":GOTO AUTOLOADØ11    IF A$=" " THEN CLR:DLOAD "SEAMDRAW"  LOOP WHILE A$<>"/"  A$=""  RETURN.ASMHELPERØA'-----------  DO    PRINT "ì";    PRINT "ñASMHELPER.A"    PRINT "==========="    PRINT "… REALLY OUGHT TO RENAME THIS FILE TO 'SEAMLIB.A'..."    PRINT    PRINT "…T IS BUILT VIA THE ö¡CME COMPILER. ÕY STYLE OF ASSEMBLY CODING HAS"    PRINT "EVOLVED TO BECOME VERY MACRO-INTENSIVE, AS MY EYES GET MORE AND MORE"    PRINT "IRRITATED AT LOOKING AT LARGE SWATHES OF RAW ASSEMBLY OPCODES."    PRINT    PRINT "… ALSO FOUND THIS MAKES FOR A SANER DEBUGGING EXPERIENCE, AS WHILE"    PRINT "DEBUGGING IN XEMU, … CAN USE THE 'NEXT' COMMAND TO STEP OVER MACROS!"    PRINT    PRINT "‘HIS 'öASMHELPER.A' IS TO BE COMPILED ON YOUR –√ VIA THE ¡CME COMPILER."    PRINT "… HAVE PROVIDED IT ON THIS DISK JUST TO EASE YOUR VIEWING PLEASURE!"    PRINT    PRINT "ü“≈‘’“Œ) ”HOW 'ñASMHELPER.A' LISTING"    PRINT "     ü/) ≈XIT"    GET KEY A$    IF A$=CHR$(13) THEN BEGIN      FNAME$ = "ASMHELPER.A"      GOSUB SHOWØASCII      ^^    FONT C      PRINT CHR$(14);  ' LOWER-CASE    BEND  LOOP WHILE A$<>"/"  A$=""  RETURN'----------.SHOWØASCII'----------  DOPEN #2, (FNAME$), R, U8  PRINT CHR$(147);  ^^  FONT A    PRINT CHR$(14);  ' LOWER-CASE  LINEØCNT = 0  DO    GET#2, CH    IF ST THEN BEGIN      DCLOSE #2      PRINT "<<< ≈Œƒ œ∆ ∆…Ã≈ >>> - PRESS “≈‘’“Œ KEY"      DO        GET KEY A$      LOOP WHILE A$ <> À≈ŸØ“≈‘’“Œ      RETURN    BEND    SKIPØFLAG = 0    ' ASCII-LOWERCASE TO PETSCII-LOWERCASE    IF CH >= 97 AND CH <= 122 THEN BEGIN      CH = CH - 32      SKIPØFLAG = 1    BEND    ' ASCII-UPPERCASE TO PETSCII UPPERCASE    IF SKIPØFLAG = 0 AND CH >= 65 AND CH <= 90 THEN BEGIN      CH = CH + 128      SKIPØFLAG = 1    BEND    ' LOOK FOR LINUX /N EOL CHAR, AND CONSIDER IT TO BE RETURN    IF SKIPØFLAG = 0 AND CH = Ã…Œ≈∆≈≈ƒ THEN BEGIN      CH = “≈‘’“Œ      LINEØCNT = LINEØCNT + 1      SKIPØFLAG = 1    BEND    ' ASCII UNDERSCORE TO PETSCII UNDERSCORE (MEGA+P)    IF SKIPØFLAG = 0 AND CH = ASC("_") THEN BEGIN      CH = $AF      SKIPØFLAG = 1    BEND    ' ASCII-CARET TO PETSCII UP-ARROW?    IF SKIPØFLAG = 0 AND CH = 94 THEN BEGIN      CH = ASC("^")      SKIPØFLAG = 1    BEND    PRINT CHR$(CH);    IF LINEØCNT = 23 THEN BEGIN      PRINT "ü<<< Õœ“≈ >>> — = QUIT, ANY OTHER KEY TO SHOW NEXT PAGE";      PRINT À≈ŸØ≈”√;"J";      GET KEY A$      IF A$ = "Q" THEN DCLOSE #2 : RETURN      LINEØCNT = 0      PRINT À≈ŸØ≈”√;"Q";    BEND  LOOP  DCLOSE #2  RETURN.MELODYØEL'---------  DO    PRINT "ì";    PRINT "ñMELODY.EL"    PRINT "========="    PRINT "‘HIS IS THE SAME TOOL … USED BACK IN '‘HE ”ILENT ≈NIGMA' DEMO, TO SEQUENCE"    PRINT "MELODY STRINGS TO SUIT ¬¡”…√ 65'S –Ã¡Ÿ COMMAND. … DON'T THINK IT HAS"    PRINT "EVOLVED A GREAT DEAL SINCE LAST TIME. …T'S A QUICK AND DIRTY TOOL THAT"    PRINT "DESERVES MORE LOVE TO MAKE IT MORE AESTHETICALLY PLEASING, BUT FOR NOW"    PRINT "IT DOES ITS JOB WELL ENOUGH."    PRINT    PRINT "’SAGE:"    PRINT "- –RESS ö∆5 TO BUILD FROM SOURCE"    PRINT "- –RESS ö∆1 TO LOAD A SONG (TRY LOADING 'öDRAGON.P')"    PRINT "- –RESS ö∆9 TO OPEN SEQUENCER"    PRINT "- –RESS ö”HIFT+“ETURN TO PLAY SEQUENCE"    PRINT    PRINT "ü“≈‘’“Œ) œPEN 'ñMELODY.EL' IN ≈LEVEN"    PRINT " ü”–¡√≈) “UN 'ñPLAYMAKER' (COMPILED SOURCE)"    PRINT "     ü/) ≈XIT"    GET KEY A$    IF A$=CHR$(13) THEN FNAME$="MELODY.EL":GOTO AUTOLOADØ11    IF A$=" " THEN CLR:DLOAD "PLAYMAKER"  LOOP WHILE A$<>"/"  A$=""  RETURN.AUTOBOOTØEL'-----------  DO    PRINT "ì";    PRINT "ñAUTOBOOT.EL"    PRINT "==========="    PRINT "…'VE RECYCLED '‘HE ”ILENT ≈NIGMA' DEMO'S BOOT MENU AND TAILORED IT FOR"    PRINT "THE '”PRING' GAME INSTEAD."    PRINT    PRINT "…T WAS A NICE WIN TO BE ABLE TO RE-USE THE EXISTING CORE/ROM/XEMU CHECK"    PRINT "LOGIC WITHIN IT, WAS A GOOD TIME SAVER."    PRINT    PRINT "‘HIS TIME AROUND, … ALSO ADDED SOME LOGIC TO HELP SWITCH ROMS ON THE FLY"    PRINT    PRINT "ü“≈‘’“Œ) œPEN 'ñAUTOBOOT.EL' IN ≈LEVEN"    PRINT "     ü/) ≈XIT"    GET KEY A$    IF A$=CHR$(13) THEN FNAME$="AUTOBOOT.EL":GOTO AUTOLOADØ11    IF A$="/" THEN A$="":RETURN    GOTO AUTOBOOTØEL  LOOP WHILE A$<>"/"  A$=""  RETURN'----------.XEMUØCHECK'----------  IF (PEEK($FFD360F) AND $20)=0 THEN XEMUØFLAG = 1  IF XEMUØFLAG = 0 THEN RETURN  PRINT "ìÿ≈Õ’ Œœ‘≈: ŸOU ARE RUNNING THIS DEMO IN THE ÿEMU EMULATOR."  PRINT  PRINT "–LEASE NOTE THAT SOME ASPECTS OF THIS DEMO RUN SLIGHTLY FASTER"  PRINT "UNDER ÿEMU COMPARED TO REAL HARDWARE (LIKELY DUE TO DIFFERENCES IN"  PRINT "HOW MUCH TIME IS CONSUMED FOR DMA CALLS, BUT STILL TO BE INVESTIGATED)"  PRINT  PRINT "¡PART FROM THAT, IT SHOULD STILL RUN FINE."  PRINT "û–RESS ANY KEY TO CONTINUE..."  GET KEY A$  RETURN'-----------.NTSCØTOØPAL'-----------  IF (PEEK($D06F) AND 128)=0 THEN VM$ = "PAL":ELSE VM$="NTSC"  IF VM$ = "PAL" THEN RETURN  PRINT "ì‘HIS PROGRAM REQUIRES SWITCHING FROM Œ‘”√ TO –¡Ã"  PRINT  PRINT "◊ILL SWITCH OVER NOW."  PRINT "û–RESS ANY KEY TO CONTINUE..."  GET KEY A$  POKE $FFD306F,$00  POKE $FFD3072,$00  POKE $FFD3048,$68  POKE $FFD3049,$00 OR (PEEK($FFD3049) AND $F0)  POKE $FFD304A,$F8  POKE $FFD304B,$01 OR (PEEK($FFD304B) AND $F0)  POKE $FFD304E,$68  POKE $FFD304F,$00 OR (PEEK($FFD304F) AND $F0)  POKE $FFD3072,$00  POKE $FFD3C0E, PEEK($FFD3C0E) OR $80  POKE $FFD3D0E, PEEK($FFD3D0E) OR $80  RETURN'---------.ROMØCHECK'---------  FOR K = 0 TO 5    ROM$=ROM$ + CHR$(PEEK($20017+K))  NEXT K  IF ROM$<>"999999" THEN BEGIN    PRINT "ì“œÕ ◊¡“Œ…Œ«: ‘HIS GAME PRESENTLY WORKS BEST USING:"    PRINT "- ≈XPERIMENTAL ROM: V999999"    PRINT "-         ŸOUR ROM: V";ROM$;""    PRINT    PRINT "◊OULD YOU LIKE TO TEMPORARILY SWITCH TO THIS ROM?"    PRINT    PRINT "…F YOU DON'T SWITCH, YOU WILL EXPERIENCE MUSIC SLOWDOWN ISSUES DUE TO "    PRINT "EXISTING/OLDER ROMS BLOCKING BASIC '–Ã¡Ÿ' COMMAND WHILE IN SYS CALLS"    PRINT    PRINT "∆UTURE ROMS WILL LIKELY REPAIR THIS MATTER."    PRINT    PRINT "◊HEN THAT OCCURS, … WILL PROVIDE AN UPDATED VERSION OF THE GAME ON THE"    PRINT "FILEHOST (HTTPS://FILES.MEGA65.ORG) TO SUIT THE NEWER ROM."    PRINT    PRINT "…F YOU EXPERIENCE ANY PROBLEMS EVEN AFTER SWITCHING TO THIS ROM, PLEASE"    PRINT "VISIT THE Õ≈«¡65 DISCORD SERVER (HTTPS://MEGA65.ORG/CHAT) AND SEND «URCE"    PRINT "A MESSAGE, AND WE CAN INVESTIGATE ANY UNUSUAL PROBLEMS."    PRINT    PRINT "- (üŸ)ES, PLEASE TEMPORARILY SWITCH TO V999999 EXPERIMENTAL ROM"    PRINT "- (üŒ)O THANKS, …'LL STICK WITH MY EXISTING ROM"    DO WHILE 1      GET KEY A$      IF A$ = "Y" THEN GOSUB UPDATEØROM      IF A$ = "N" THEN EXIT    LOOP  BEND  RETURN'----------.UPDATEØROM'----------  BLOAD "ASMHELPER"  BLOAD "999999.BIN",P($8000000),R  ' ADD MY GI-BOOT MARKER  POKE $40000, ASC("G"), ASC("I"), ASC("B")  ' WIPE ELEVEN'S MAGIC SIGNATURE  POKE $4FF00, 0, 0  BANK 0 : SYS $7F24 : BANK 128  RETURN'----------------.FORMATØDATESTAMP'----------------' ¡ PORT OF LYDON'S FUNCTION IN "FREEZEØMEGAINFO.C"  MASK% = $FF  ' FOR MAX10, WOULD NEED TO BE $3F  MONTH% = 1  YEAR% = 2020  DS% = ((PEEK(OFFS + 1) AND MASK%) * 256) + PEEK(OFFS)  DO WHILE DS% > 366    YEAR% = YEAR% + 1    DS% = DS% - 366  LOOP  IF MONTH%=1 AND DS%>31 THEN BEGIN    MONTH% = MONTH% + 1    DS% = DS% - 31  BEND  IF MONTH%=2 AND NOT (YEAR% AND 3) AND DS%>29 THEN BEGIN    MONTH% = MONTH% + 1    DS% = DS% - 29  BEND  IF MONTH%=2 AND (YEAR% AND 3) AND DS%>28 THEN BEGIN    MONTH% = MONTH% + 1    DS% = DS% - 28  BEND  IF MONTH%=3 AND DS%>31 THEN BEGIN    MONTH% = MONTH% + 1    DS% = DS% - 31  BEND  IF MONTH%=4 AND DS%>30 THEN BEGIN    MONTH% = MONTH% + 1    DS% = DS% - 30  BEND  IF MONTH%=5 AND DS%>31 THEN BEGIN    MONTH% = MONTH% + 1    DS% = DS% - 31  BEND  IF MONTH%=6 AND DS%>30 THEN BEGIN    MONTH% = MONTH% + 1    DS% = DS% - 30  BEND  IF MONTH%=7 AND DS%>31 THEN BEGIN    MONTH% = MONTH% + 1    DS% = DS% - 31  BEND  IF MONTH%=8 AND DS%>31 THEN BEGIN    MONTH% = MONTH% + 1    DS% = DS% - 31  BEND  IF MONTH%=9 AND DS%>30 THEN BEGIN    MONTH% = MONTH% + 1    DS% = DS% - 30  BEND  IF MONTH%=10 AND DS%>31 THEN BEGIN    MONTH% = MONTH% + 1    DS% = DS% - 31  BEND  IF MONTH%=11 AND DS%>30 THEN BEGIN    MONTH% = MONTH% + 1    DS% = DS% - 30  BEND  DATE$=MID$(STR$(YEAR%),2)  IF MONTH% > 9 THEN BEGIN    DATE$ = DATE$ + "-"  BEND:ELSE BEGIN    DATE$ = DATE$ + "-0"  BEND  DATE$ = DATE$ + MID$(STR$(MONTH%), 2)  IF DS% > 9 THEN BEGIN    DATE$ = DATE$ + "-"  BEND:ELSE BEGIN    DATE$ = DATE$ + "-0"  BEND  DATE$ = DATE$ + MID$(STR$(DS%), 2)  RETURN'----------------.FORMATØFPGAØHASH'----------------' ¡ PORT OF LYDON'S FUNCTION IN "FREEZEØMEGAINFO.C"  REVERSE% = 0  ' MAX10 IS REVERSED  IF REVERSE% THEN BEGIN    UPPER = (PEEK(OFFS+2) * 256) + PEEK(OFFS+3)    LOWER = (PEEK(OFFS+4) * 256) + PEEK(OFFS+5)  BEND:ELSE:BEGIN    UPPER = (PEEK(OFFS+5) * 256) + PEEK(OFFS+4)    LOWER = (PEEK(OFFS+3) * 256) + PEEK(OFFS+2)  BEND  FPGAØHASH$ = HEX$(UPPER) + HEX$(LOWER)  RETURN  